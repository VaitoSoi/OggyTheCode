const { CommandInteraction, MessageEmbed, MessageActionRow, MessageButton } = require('discord.js')
const { SlashCommandBuilder } = require('@discordjs/builders')

module.exports = {
    data: new SlashCommandBuilder()
        .setName('queue')
        .setDescription('Xem h√†ng ch·ªù nh·∫°c'),
    /**
    * 
    * @param {CommandInteraction} interaction 
    */ 
    run: async(interaction) => {
        if (interaction.deferred === false) await interaction.deferReply()
        const client = interaction.client
        const ms = require('ms')
        const row = new MessageActionRow()
            .addComponents(
                new MessageButton()
                    .setCustomId('queuepreviouspage')
                    .setLabel('<<<')
                    .setStyle('SUCCESS')
                    .setDisabled()
            )
            .addComponents(
                new MessageButton()
                    .setCustomId('queuedeletemessage')
                    .setLabel('üóëÔ∏è')
                    .setStyle('DANGER')
            )
            .addComponents(
                new MessageButton()
                    .setCustomId('queuenextpage')
                    .setLabel('>>>')
                    .setStyle('SUCCESS')
            )
        const queue = client.player.getQueue(interaction.guild.id)
        if (!queue || !queue.nowPlaying()) return interaction.editReply('üî¥ | H√†ng ch·ªù ƒëang tr·ªëng !');
        if (!queue.tracks.length) {
            const embed = new MessageEmbed()
                .setColor('GREEN')
                .setAuthor({ name: `Danh s√°ch b√†i h√°t ƒëang ch·ªù ph√°t t·∫°i ${message.guild.name}`, iconURL: message.guild.iconURL })
                .addFields({
                    name: `B√†i h√°t ƒëang ph√°t`,
                    value: `[${queue.current.title}](${queue.current.url})\n*Ng∆∞·ªùi y√™u c·∫ßu: ${queue.current.requestedBy}*\n`
                });
            return interaction.editReply({ embeds: [embed] })
        }

        const embed = new MessageEmbed()
            .setTitle(`C√°c b√†i h√°t trong queue t·∫°i server **${message.guild.name}**`)
            .setFooter({ text: `T·∫•t c·∫£ b√†i h√°t: ${queue.tracks.length} | T·ªïng c·ªông th·ªùi gian: ${ms(queue.totalTime)}` })
            .setAuthor({ name: `${message.author.tag}`, iconURL: message.author.displayAvatarURL() })
            .addFields({
                name: 'B√†i h√°t ƒëang ph√°t',
                value: `${queue.current.title}\nLink: ${queue.current.url}\nB·ªüi: ${queue.current.author} | Th·ªùi gian: ${ms(queue.current.durationMS)}\nNg∆∞·ªùi y√™u c·∫ßu: ${queue.current.requestedBy}`
            })
            .setColor('RANDOM')
        var n = 0
        const queue1 = queue.tracks.slice(0, 10)
        queue1.forEach(track => {
            n++
            embed.addFields({
                name: `${n} ${track.title}`,
                value: `Link: ${track.url}\nB·ªüi: ${track.author} | Th·ªùi gian: ${ms(track.durationMS)}\nNg∆∞·ªùi y√™u c·∫ßu: ${track.requestedBy}`
            })
        })
        interaction.editReply({ embeds: [embed], components: [row] })
    }
} 